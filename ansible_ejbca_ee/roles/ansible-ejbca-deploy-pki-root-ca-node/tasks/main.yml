---
# tasks file for roles/ansible-ejbca-deploy-pki-root-ca-node

- name: Prepare configdump template files
  include_role: 
    name: ansible-ejbca-cnfdump-stage
    tasks_from: config_configdump
  when: not saas_deployment is defined

- name: Check deployment
  include_role: 
    name: ansible-ejbca-restart-wildfly
  vars:
    restart_wildfly: true
  tags: check_deployment
  when: not saas_deployment is defined

- name: Use Configdump to create the Root CA's
  block:

    - name: Create crypto token for the Root CA's
      include_role: 
        name: ansible-ejbca-crypto-token
        tasks_from: add_crypto_token
      loop: "{{ root_add_certification_authorities }}"
      no_log: true

    - name: Generate keys for the Root CA's on crypto token
      include_role:
        name: ansible-ejbca-crypto-token
        tasks_from: generate_keys
      loop: "{{ root_add_certification_authorities |subelements('crypto_token') }}"
      loop_control:
        label: "{{ key_item.0.caname }}"
        loop_var: key_item
      no_log: true
      tags: key_generation

    - name: Stage Root CA's to create with configdump
      include_role:
        name: ansible-ejbca-cnfdump-stage
        tasks_from: stage_ca
      vars:
        dump_dest: "{{ ejbca_home }}/dump/dump1/certification-authorities/{{ item.caname }}.yaml"
      loop: "{{ root_add_certification_authorities }}"
      loop_control:
        label: "{{ item.caname }}"
      no_log: true
      when: not saas_deployment is defined

    - name: Stage Root CA's to create with configdump
      include_role:
        name: ansible-saas_deployment
        tasks_from: config_dump_import
      no_log: true
      when: saas_deployment is defined

    - name: Intialize Root CA's with configdump
      command: >
        ./configdump.sh import 
        --ignore-errors 
        --overwrite update 
        --non-interactive continue 
        -l {{ ejbca_home }}/dump/dump1 
        --initialize
      args:
        chdir: "{{ ejbca_home }}/dist/configdump"
      become: yes 
      become_user: "{{ ejbca_user }}"

  when: 
    - deploy_with_configdump is defined and deploy_with_configdump|bool
    - root_add_certification_authorities[0] is defined 

- name: Use CLI to create the Root CA's
  block:

    - name: Import configdump of CA templates and EKU's
      command: >
        ./configdump.sh import 
        --ignore-errors 
        --overwrite update 
        --non-interactive continue 
        -l {{ ejbca_home }}/dump/dump1
      args:
        chdir: "{{ ejbca_home }}/dist/configdump"
      become: yes 
      become_user: "{{ ejbca_user }}"
      when: not saas_deployment is defined
      
    - name: Create crypto tokens for Root CA's
      include_role: 
        name: ansible-ejbca-crypto-token
        tasks_from: add_crypto_token
      loop: "{{ root_add_certification_authorities }}"
      no_log: true

    - name: Generate keys for Root CA's on crypto token
      include_role:
        name: ansible-ejbca-crypto-token
        tasks_from: generate_keys
      loop: "{{ root_add_certification_authorities |subelements('crypto_token') }}"
      loop_control:
        label: "{{ key_item.0.caname }}"
        loop_var: key_item
      no_log: true
      tags: key_generation

    - name: Initialize Root CA's with CLI commands
      include_role:
        name: ansible-ejbca-init-ca
        tasks_from: init_ca
      loop: "{{ root_add_certification_authorities }}"
      no_log: true
      tags: create_cas

    - name: Configure Root CA's settings
      include_role: 
        name: ansible-ejbca-conf-ca-exts
        tasks_from: config_ca_extensions
      loop: "{{ root_add_certification_authorities }}"
      no_log: true

    - block:
    
        - name: Import External CA Profiles to Root Node
          include_role:
            name: ansible-saas-deployment
            tasks_from: config_dump_post

        - name: Export Root CA certificate
          include_role:
            name: ansible-ejbca-certreq-cli
            tasks_from: get_ca_certs
          loop: "{{ root_add_certification_authorities }}"
              
      when: saas_deployment is defined

  when:
    - root_add_certification_authorities[0] is defined
    - not deploy_with_configdump is defined or deploy_with_configduomp|bool

- name: Configure EJBCA Enrollment protocols
  include_role:
    name: ansible-ejbca-enroll-protocols
  when: 
    - disable_ejbca_protocols[0] is defined or enable_ejbca_protocols[0] is defined
